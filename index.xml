<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Checkout Evergreen Base Documentation</title>
    <link>https://evergreen-ci.github.io/git-co-evg-base/</link>
    <description>Recent content on Git Checkout Evergreen Base Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://evergreen-ci.github.io/git-co-evg-base/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/criteria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/criteria/</guid>
      <description>git-co-evg-base allows you to specify criteria that define what a matching evergreen version will look like.
There are 5 types of criteria that can be specified.
 passing tasks run tasks pass threshold fail threshold run threshold  Passing tasks     Passing tasks are tasks that must have completed successfully in Evergreen to meet the criteria. They are specified with the --passing-task option. This option can be specified more than once to include multiple tasks.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/getting-started/installation/</guid>
      <description>Dependencies     You&amp;rsquo;ll need an installation of Python on your computer. It needs to be version 3.7.1 or higher.
 git: Version 2.17 or higher Evergreen config file evergreen: The evergreen command line tool.  Installation     We strongly recommend using a tool like pipx to install this tool. This will isolate the dependencies and ensure they don&amp;rsquo;t conflict with other tools.
$ pipx install git-co-evg-base Debugging installation issues     A common issue that arises during installation is pipx failing to install git-co-evg-base and printing out the following error:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/criteria_application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/criteria_application/</guid>
      <description>Applying checks to build variants     In projects with multiple build variants, you may not desire to apply the criteria to every build variant. The --display-variant-name and/or --build-variant options allow you to control which build variants the checks should apply. Options take a regular expressions as an argument. Any build variants that match against the regular express will have their criteria checked.
The --display-variant-name and/or --build-variant option can be specified multiple times to provide multiple regular expression to check against.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/getting-started/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/getting-started/prerequisites/</guid>
      <description>Evergreen authentication     This tool needs to talk to evergreen via the evergreen api in order to function. If you have setup the evergreen command line tool as described here, everything should be setup for the tool to function.
If for some reason the .evergreen.yml file that contains your username and api key is not in your home directory, you will need to use the --evg-config-file option to specify the location when running the command.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/actions/</guid>
      <description>Performing git actions when the criteria are meet     Once a revision that meets the specified criteria is found, that revision can be used to perform certain git operations. By default, no git action will be performed. However, the --git-operation option can be provided to change this behavior.
The option takes one of the following as an argument:
 checkout [default] - Perform a git checkout to checkout the found revision.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/getting-started/getting_help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/getting-started/getting_help/</guid>
      <description>You can get a list of all the available options with the --help option.
Note
When using the --help option, you will need to call the command directly via git-co-evg-base and not execute it via git (i.e. git co-evg-base, note the space after git). This is due to a limitation in the git help system.  Additionally, there is a --verbose option that can be specified to get more detailed information about what the command is doing.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/reusing_criteria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/reusing_criteria/</guid>
      <description>Saving criteria     Instead of typing out the criteria to search for on every execution, criteria can be saved under a given name and then referenced in future executions.
The --save-criteria option will do this. It takes a name to save the criteria under as an argument. When the --save-criteria option is specified, the search for a revision will not occur. The criteria will only be saved.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/sharing_criteria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/sharing_criteria/</guid>
      <description>You can use --export-criteria and --import-criteria to share criteria rules with others.
Exporting criteria rules     The --export-criteria option will export saved criteria to a file that can be shared. It takes the name of a saved criteria as a argument. The option can be specified multiple times to export multiple named criteria. The --export-file is required and takes as an argument that specified where the exported rules should be written.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/concepts/limiting_search_time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/concepts/limiting_search_time/</guid>
      <description>The tool will limit how far back it will search before giving up. By default, it will look back 50 commits. This can be customized, however. There are three ways to limit how far back is searched:
 commit [default=50]: The --commit-lookback option takes an argument that specifies how many commits to search before giving up. time: The --timeout-secs option takes an argument that specifies how many seconds to search before giving up.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://evergreen-ci.github.io/git-co-evg-base/project-history/CHANGELOG/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evergreen-ci.github.io/git-co-evg-base/project-history/CHANGELOG/</guid>
      <description>Changelog     7.0.2 - 2024-07-24      Add an option to check only one specific version with version_override  7.0.1 - 2024-06-11      Fix for unbound variable. Add back support for mongo default variants  7.0.0 - 2024-06-10      --display-variant-name and --build-variant are xor&amp;rsquo;d together, instead of or&amp;rsquo;d.  6.0.1 - 2024-03-27      Merge with the GitHub merge queue (no code changes)  6.</description>
    </item>
    
  </channel>
</rss>
